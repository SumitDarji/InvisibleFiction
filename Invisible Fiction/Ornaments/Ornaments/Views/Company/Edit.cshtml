@model Ornaments.Models.CompanyModel
@{
    ViewBag.Title = ViewBag.Header;
}

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Company</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a onclick="Javascript:ShowProgressBar();" href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item"><a onclick="Javascript:ShowProgressBar();" href="@Url.Action("Index", "Company")">Company</a></li>
                    <li class="breadcrumb-item active">@ViewBag.Header Company</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card card-primary card-outline">
                    <div class="card-header">
                        <h3 class="card-title">@ViewBag.Header Company Details</h3>
                    </div>

                    <!-- /.card-header -->
                    @using (Html.BeginForm("Edit", "Company", FormMethod.Post, new { @class = "form-horizontal", @id = "EditCompanyForm", enctype = "multipart/form-data" }))
                    {
                        @Html.HiddenFor(model => model.CompanyID)
                        <div class="card-body">
                            <div class="form-group">
                                <label for="companyname">Name</label>
                                @Html.TextBoxFor(model => model.Name, new { @id = "companyname", @placeholder = "Enter Name", @class = "form-control", @maxlength = "30" })
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                            <div class="form-group">
                                <label for="companyAddress">Address</label>
                                @Html.TextAreaFor(model => model.Address, new { @id = "companyAddress", @row = 3, @col = 6, @placeholder = "Enter Address", @class = "form-control", @maxlength = "30" })
                                @Html.ValidationMessageFor(model => model.Address)
                            </div>
                            <div class="form-group">
                                <label for="companyEmail">Email address</label>
                                @Html.TextBoxFor(model => model.Email, new { @id = "companyEmail", @placeholder = "Enter email", @class = "form-control", @maxlength = "30" })
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>
                            <div class="form-group">
                                <label for="companyMobile">Mobile</label>
                                @Html.TextBoxFor(model => model.Mobile, new { @id = "companyMobile", @placeholder = "Enter Mobile no", @class = "form-control", @maxlength = "30" })
                                @Html.ValidationMessageFor(model => model.Mobile)
                            </div>
                            <div class="form-group">
                                <div class="row m-0" style="float:right; width:100%;">
                                    <div class="col-md-6 p-0 push-left">
                                        <label for="exampleInputFile">Logo</label>
                                        <div class="input-group">
                                            <div class="custom-file">
                                                @Html.TextBoxFor(model => model.LogoImgFile, new { type = "file", @id = "InputFileLogoImg", name = "LogoImgFile" })
                                                <label class="custom-file-label" for="InputFileLogoImg">Choose file</label>
                                            </div>
                                        </div>
                                        <span id="spnLogoValidation" class="field-validation-error" style="display:none;"></span>
                                    </div>
                                    <div class="col-md-6 pl-4 push-right">
                                        <img src="@Model.LogoImgPath" id="imgLogoPreview" width="100" height="100" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="companyUserName">User Name</label>
                                @Html.TextBoxFor(model => model.MasterUsername, new { @readonly = "readonly", @id = "companyUserName", @placeholder = "Enter User Name", @class = "form-control", @maxlength = "30" })
                                @Html.ValidationMessageFor(model => model.MasterUsername)
                            </div>
                            <div class="form-group">
                                <label for="companyPassword">Password</label>
                                @Html.TextBoxFor(model => model.MasterPassword, new { @placeholder = "Enter Password", @class = "form-control", @maxlength = "16", @type = "password" })
                                @Html.ValidationMessageFor(model => model.MasterPassword)
                            </div>
                        </div>
                        <!-- /.card-body -->
                        <div class="card-footer">
                            <div class="row" style="float:right;width: 50%;">
                                <div class="col-md-6 push-left">
                                    @if (Session["LoginTypeCode"] != null && Convert.ToInt32(Session["LoginTypeCode"]) == Convert.ToInt32(Ornaments.BusinessObjects.Enum.LoginTypeCode.ADMIN_USER))
                                    {
                                        <button onclick="Javascript:jsFormValidate('EditCompanyForm');" type="submit" class="btn btn-primary">Update</button>
                                    }
                                </div>
                                <div class="col-md-6 push-right">
                                    @Html.ActionLink("Cancel", "Index", "Company", new { @class = "btn btn-block btn-default", onclick = "Javascript:ShowProgressBar();" })
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<!-- /.content -->
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            jsMakeMenuActive("liCompany");
                // CREATE Company SUCCESSFULLY
        if ('@ViewBag.Message' != "") {
            if ('@ViewBag.IsSuccess' == 1) {
                swal({
                    title: 'Information Saved.',
                    text: '@ViewBag.Message',
                    type: 'success',
                    confirmButtonText: 'Ok'
                }).then(function () {
                    ShowProgressBar();
                     window.location.href = '@Url.Action("Index", "Company")';
                });
            }
            else {
                swal(
                    'Error',
                    '@ViewBag.Message',
                    'error'
                );
            }
        }

            function readURL(input,index) {
                if (input.files && input.files[0]) {
                  var reader = new FileReader();
                  reader.onload = function (e) {
                       $('#imgLogoPreview').attr('src', e.target.result);  // You can show image preview before submit
                  }
                  reader.readAsDataURL(input.files[0]);
                }
            }

            $("#InputFileLogoImg").change(function (e) {
                debugger;
                var _URL = window.URL || window.webkitURL;
      // Check file is image or not
      var file, img;
      if ((file = this.files[0])) {

        var fileName = this.files[0]['name'];
        var idxDot = fileName.lastIndexOf(".") + 1;
        var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
        if (extFile=="jpg" || extFile=="jpeg" || extFile=="png"){

          readURL(this,1); 
          img = new Image();
          img.onload = function () {

              if (this.width != 128 || this.height != 128) {
                  // alert('Please upload proper image with exact size : 100 x 110');
                  $("#spnLogoValidation").text("Please upload proper image with exact size : 128 x 128");
                  $("#spnLogoValidation").show();
              } else {
                  $("#spnLogoValidation").text("");
                  $("#spnLogoValidation").hide();
              } 

          };
          img.src = _URL.createObjectURL(file);

        } else {
            $("#spnLogoValidation").text("Only jpg/jpeg and png files are allowed!");
            $("#spnLogoValidation").show();
          // alert('Only jpg/jpeg and png files are allowed!');
         }
       }
    });
        });
    </script>
}